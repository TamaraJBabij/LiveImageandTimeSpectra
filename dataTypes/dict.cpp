//
// File generated by rootcint at Sat Mar 26 19:48:48 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "dict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void Group_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Group_Dictionary();
   static void *new_Group(void *p = 0);
   static void *newArray_Group(Long_t size, void *p);
   static void delete_Group(void *p);
   static void deleteArray_Group(void *p);
   static void destruct_Group(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Group*)
   {
      ::Group *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Group),0);
      static ::ROOT::TGenericClassInfo 
         instance("Group", "./Group.h", 44,
                  typeid(::Group), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &Group_Dictionary, isa_proxy, 0,
                  sizeof(::Group) );
      instance.SetNew(&new_Group);
      instance.SetNewArray(&newArray_Group);
      instance.SetDelete(&delete_Group);
      instance.SetDeleteArray(&deleteArray_Group);
      instance.SetDestructor(&destruct_Group);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Group*)
   {
      return GenerateInitInstanceLocal((::Group*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Group*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Group_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Group*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void DataSet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void DataSet_Dictionary();
   static void *new_DataSet(void *p = 0);
   static void *newArray_DataSet(Long_t size, void *p);
   static void delete_DataSet(void *p);
   static void deleteArray_DataSet(void *p);
   static void destruct_DataSet(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DataSet*)
   {
      ::DataSet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::DataSet),0);
      static ::ROOT::TGenericClassInfo 
         instance("DataSet", "./DataSet.h", 9,
                  typeid(::DataSet), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &DataSet_Dictionary, isa_proxy, 0,
                  sizeof(::DataSet) );
      instance.SetNew(&new_DataSet);
      instance.SetNewArray(&newArray_DataSet);
      instance.SetDelete(&delete_DataSet);
      instance.SetDeleteArray(&deleteArray_DataSet);
      instance.SetDestructor(&destruct_DataSet);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DataSet*)
   {
      return GenerateInitInstanceLocal((::DataSet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataSet*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void DataSet_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::DataSet*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DataSet(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataSet : new ::DataSet;
   }
   static void *newArray_DataSet(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataSet[nElements] : new ::DataSet[nElements];
   }
   // Wrapper around operator delete
   static void delete_DataSet(void *p) {
      delete ((::DataSet*)p);
   }
   static void deleteArray_DataSet(void *p) {
      delete [] ((::DataSet*)p);
   }
   static void destruct_DataSet(void *p) {
      typedef ::DataSet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DataSet

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Group(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Group : new ::Group;
   }
   static void *newArray_Group(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Group[nElements] : new ::Group[nElements];
   }
   // Wrapper around operator delete
   static void delete_Group(void *p) {
      delete ((::Group*)p);
   }
   static void deleteArray_Group(void *p) {
      delete [] ((::Group*)p);
   }
   static void destruct_Group(void *p) {
      typedef ::Group current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Group

/********************************************************
* dict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtabledict();

extern "C" void G__set_cpp_environmentdict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("DataSet.h");
  G__add_compiledheader("Group.h");
  G__cpp_reset_tagtabledict();
}
#include <new>
extern "C" int G__cpp_dllrevdict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Group */
static int G__dict_264_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Group* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Group((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Group((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_Group));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_264_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Group* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Group[n];
     } else {
       p = new((void*) gvp) Group[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Group;
     } else {
       p = new((void*) gvp) Group;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_Group));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_264_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Group*) G__getstructoffset())->addHit(*((Hit*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_264_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Group*) G__getstructoffset())->getId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_264_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Group*) G__getstructoffset())->getHits());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_264_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Group* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Group(*(Group*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_Group));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Group G__TGroup;
static int G__dict_264_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Group*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Group*) (soff+(sizeof(Group)*i)))->~G__TGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Group*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Group*) (soff))->~G__TGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_264_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Group* dest = (Group*) G__getstructoffset();
   *dest = *(Group*) libp->para[0].ref;
   const Group& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DataSet */
static int G__dict_274_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataSet[n];
     } else {
       p = new((void*) gvp) DataSet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataSet;
     } else {
       p = new((void*) gvp) DataSet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_DataSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_274_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataSet*) G__getstructoffset())->addGroup((Group*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_274_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataSet*) G__getstructoffset())->getGroups());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_274_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataSet* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataSet(*(DataSet*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_DataSet));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataSet G__TDataSet;
static int G__dict_274_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataSet*) (soff+(sizeof(DataSet)*i)))->~G__TDataSet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataSet*) (soff))->~G__TDataSet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_274_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataSet* dest = (DataSet*) G__getstructoffset();
   *dest = *(DataSet*) libp->para[0].ref;
   const DataSet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Group */

/* DataSet */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncdict {
 public:
  G__Sizep2memfuncdict(): p(&G__Sizep2memfuncdict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncdict::*p)();
};

size_t G__get_sizep2memfuncdict()
{
  G__Sizep2memfuncdict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancedict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetabledict() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::iterator_category,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::value_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::difference_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::pointer,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::reference>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,ROOT::TSchemaHelper,long>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,ROOT::TSchemaHelper,long,ROOT::TSchemaHelper*>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::iterator_category,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::value_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::difference_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::pointer,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::iterator_category,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::value_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::difference_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::pointer,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::reference>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TVirtualArray*>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TVirtualArray*,long>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TVirtualArray*,long,TVirtualArray**>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::iterator_category,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::value_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::difference_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::pointer,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Hit>",117,G__get_linked_tagnum(&G__dictLN_vectorlEHitcOallocatorlEHitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Hit>",117,G__get_linked_tagnum(&G__dictLN_vectorlEHitcOallocatorlEHitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHitcOallocatorlEHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHitcOallocatorlEHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<Hit,allocator<Hit> >::iterator>::iterator_category,iterator_traits<vector<Hit,allocator<Hit> >::iterator>::value_type,iterator_traits<vector<Hit,allocator<Hit> >::iterator>::difference_type,iterator_traits<vector<Hit,allocator<Hit> >::iterator>::pointer,iterator_traits<vector<Hit,allocator<Hit> >::iterator>::reference>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOHitcOlongcOHitmUcOHitaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,Hit>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOHitcOlongcOHitmUcOHitaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,Hit,long>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOHitcOlongcOHitmUcOHitaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,Hit,long,Hit*>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOHitcOlongcOHitmUcOHitaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHitcOallocatorlEHitgRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHitcOallocatorlEHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<Hit,allocator<Hit> >::const_iterator>::iterator_category,iterator_traits<vector<Hit,allocator<Hit> >::const_iterator>::value_type,iterator_traits<vector<Hit,allocator<Hit> >::const_iterator>::difference_type,iterator_traits<vector<Hit,allocator<Hit> >::const_iterator>::pointer,iterator_traits<vector<Hit,allocator<Hit> >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOHitcOlongcOHitmUcOHitaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Set>",117,G__get_linked_tagnum(&G__dictLN_vectorlESetcOallocatorlESetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Set>",117,G__get_linked_tagnum(&G__dictLN_vectorlESetcOallocatorlESetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlESetcOallocatorlESetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlESetcOallocatorlESetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<Set,allocator<Set> >::iterator>::iterator_category,iterator_traits<vector<Set,allocator<Set> >::iterator>::value_type,iterator_traits<vector<Set,allocator<Set> >::iterator>::difference_type,iterator_traits<vector<Set,allocator<Set> >::iterator>::pointer,iterator_traits<vector<Set,allocator<Set> >::iterator>::reference>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOSetcOlongcOSetmUcOSetaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,Set>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOSetcOlongcOSetmUcOSetaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,Set,long>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOSetcOlongcOSetmUcOSetaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,Set,long,Set*>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOSetcOlongcOSetmUcOSetaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlESetcOallocatorlESetgRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlESetcOallocatorlESetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<Set,allocator<Set> >::const_iterator>::iterator_category,iterator_traits<vector<Set,allocator<Set> >::const_iterator>::value_type,iterator_traits<vector<Set,allocator<Set> >::const_iterator>::difference_type,iterator_traits<vector<Set,allocator<Set> >::const_iterator>::pointer,iterator_traits<vector<Set,allocator<Set> >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOSetcOlongcOSetmUcOSetaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Group*>",117,G__get_linked_tagnum(&G__dictLN_vectorlEGroupmUcOallocatorlEGroupmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Group*>",117,G__get_linked_tagnum(&G__dictLN_vectorlEGroupmUcOallocatorlEGroupmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEGroupmUcOallocatorlEGroupmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEGroupmUcOallocatorlEGroupmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<Group*,allocator<Group*> >::iterator>::iterator_category,iterator_traits<vector<Group*,allocator<Group*> >::iterator>::value_type,iterator_traits<vector<Group*,allocator<Group*> >::iterator>::difference_type,iterator_traits<vector<Group*,allocator<Group*> >::iterator>::pointer,iterator_traits<vector<Group*,allocator<Group*> >::iterator>::reference>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOGroupmUcOlongcOGroupmUmUcOGroupmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,Group*>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOGroupmUcOlongcOGroupmUmUcOGroupmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,Group*,long>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOGroupmUcOlongcOGroupmUmUcOGroupmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,Group*,long,Group**>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOGroupmUcOlongcOGroupmUmUcOGroupmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEGroupmUcOallocatorlEGroupmUgRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEGroupmUcOallocatorlEGroupmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<Group*,allocator<Group*> >::const_iterator>::iterator_category,iterator_traits<vector<Group*,allocator<Group*> >::const_iterator>::value_type,iterator_traits<vector<Group*,allocator<Group*> >::const_iterator>::difference_type,iterator_traits<vector<Group*,allocator<Group*> >::const_iterator>::pointer,iterator_traits<vector<Group*,allocator<Group*> >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__dictLN_iteratorlErandom_access_iterator_tagcOGroupmUcOlongcOGroupmUmUcOGroupmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Group */
static void G__setup_memvarGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_Group));
   { Group *p; p=(Group*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictLN_Particle),-1,-1,4,"electron=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictLN_Particle),-1,-1,4,"positron=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictLN_Particle),-1,-1,4,"ion=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictLN_vectorlEHitcOallocatorlEHitgRsPgR),G__defined_typename("vector<Hit>"),-1,4,"rawData=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictLN_vectorlESetcOallocatorlESetgRsPgR),G__defined_typename("vector<Set>"),-1,4,"setData=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DataSet */
static void G__setup_memvarDataSet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_DataSet));
   { DataSet *p; p=(DataSet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictLN_vectorlEGroupmUcOallocatorlEGroupmUgRsPgR),G__defined_typename("vector<Group*>"),-1,4,"data=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvardict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGroup(void) {
   /* Group */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_Group));
   G__memfunc_setup("Group",525,G__dict_264_0_1, 105, G__get_linked_tagnum(&G__dictLN_Group), -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Group",525,G__dict_264_0_2, 105, G__get_linked_tagnum(&G__dictLN_Group), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addHit",590,G__dict_264_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Hit' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getId",493,G__dict_264_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHits",728,G__dict_264_0_5, 85, G__get_linked_tagnum(&G__dictLN_vectorlEHitcOallocatorlEHitgRsPgR), G__defined_typename("vector<Hit>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Group", 525, G__dict_264_0_6, (int) ('i'), G__get_linked_tagnum(&G__dictLN_Group), -1, 0, 1, 1, 1, 0, "u 'Group' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Group", 651, G__dict_264_0_7, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_264_0_8, (int) ('u'), G__get_linked_tagnum(&G__dictLN_Group), -1, 1, 1, 1, 1, 0, "u 'Group' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataSet(void) {
   /* DataSet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_DataSet));
   G__memfunc_setup("DataSet",678,G__dict_274_0_1, 105, G__get_linked_tagnum(&G__dictLN_DataSet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addGroup",822,G__dict_274_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Group' - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGroups",960,G__dict_274_0_3, 85, G__get_linked_tagnum(&G__dictLN_vectorlEGroupmUcOallocatorlEGroupmUgRsPgR), G__defined_typename("vector<Group*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DataSet", 678, G__dict_274_0_4, (int) ('i'), G__get_linked_tagnum(&G__dictLN_DataSet), -1, 0, 1, 1, 1, 0, "u 'DataSet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataSet", 804, G__dict_274_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_274_0_6, (int) ('u'), G__get_linked_tagnum(&G__dictLN_DataSet), -1, 1, 1, 1, 1, 0, "u 'DataSet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncdict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globaldict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcdict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR = { "iterator<random_access_iterator_tag,ROOT::TSchemaHelper,long,ROOT::TSchemaHelper*,ROOT::TSchemaHelper&>" , 115 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR = { "iterator<random_access_iterator_tag,TVirtualArray*,long,TVirtualArray**,TVirtualArray*&>" , 115 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_Hit = { "Hit" , 115 , -1 };
G__linked_taginfo G__dictLN_Particle = { "Particle" , 115 , -1 };
G__linked_taginfo G__dictLN_vectorlEHitcOallocatorlEHitgRsPgR = { "vector<Hit,allocator<Hit> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEHitcOallocatorlEHitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Hit,allocator<Hit> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_iteratorlErandom_access_iterator_tagcOHitcOlongcOHitmUcOHitaNgR = { "iterator<random_access_iterator_tag,Hit,long,Hit*,Hit&>" , 115 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEHitcOallocatorlEHitgRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<Hit,allocator<Hit> >::const_iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_Group = { "Group" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlESetcOallocatorlESetgRsPgR = { "vector<Set,allocator<Set> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlESetcOallocatorlESetgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Set,allocator<Set> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_iteratorlErandom_access_iterator_tagcOSetcOlongcOSetmUcOSetaNgR = { "iterator<random_access_iterator_tag,Set,long,Set*,Set&>" , 115 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlESetcOallocatorlESetgRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<Set,allocator<Set> >::const_iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_DataSet = { "DataSet" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEGroupmUcOallocatorlEGroupmUgRsPgR = { "vector<Group*,allocator<Group*> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEGroupmUcOallocatorlEGroupmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Group*,allocator<Group*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_iteratorlErandom_access_iterator_tagcOGroupmUcOlongcOGroupmUmUcOGroupmUaNgR = { "iterator<random_access_iterator_tag,Group*,long,Group**,Group*&>" , 115 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEGroupmUcOallocatorlEGroupmUgRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<Group*,allocator<Group*> >::const_iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtabledict() {
  G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
  G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
  G__dictLN_Hit.tagnum = -1 ;
  G__dictLN_Particle.tagnum = -1 ;
  G__dictLN_vectorlEHitcOallocatorlEHitgRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEHitcOallocatorlEHitgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_iteratorlErandom_access_iterator_tagcOHitcOlongcOHitmUcOHitaNgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEHitcOallocatorlEHitgRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
  G__dictLN_Group.tagnum = -1 ;
  G__dictLN_vectorlESetcOallocatorlESetgRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlESetcOallocatorlESetgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_iteratorlErandom_access_iterator_tagcOSetcOlongcOSetmUcOSetaNgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlESetcOallocatorlESetgRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
  G__dictLN_DataSet.tagnum = -1 ;
  G__dictLN_vectorlEGroupmUcOallocatorlEGroupmUgRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEGroupmUcOallocatorlEGroupmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_iteratorlErandom_access_iterator_tagcOGroupmUcOlongcOGroupmUmUcOGroupmUaNgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEGroupmUcOallocatorlEGroupmUgRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtabledict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_Hit);
   G__get_linked_tagnum_fwd(&G__dictLN_Particle);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEHitcOallocatorlEHitgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEHitcOallocatorlEHitgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_iteratorlErandom_access_iterator_tagcOHitcOlongcOHitmUcOHitaNgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEHitcOallocatorlEHitgRsPgRcLcLconst_iteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_Group),sizeof(Group),-1,34048,(char*)NULL,G__setup_memvarGroup,G__setup_memfuncGroup);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlESetcOallocatorlESetgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlESetcOallocatorlESetgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_iteratorlErandom_access_iterator_tagcOSetcOlongcOSetmUcOSetaNgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlESetcOallocatorlESetgRsPgRcLcLconst_iteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_DataSet),sizeof(DataSet),-1,1280,(char*)NULL,G__setup_memvarDataSet,G__setup_memfuncDataSet);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEGroupmUcOallocatorlEGroupmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEGroupmUcOallocatorlEGroupmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_iteratorlErandom_access_iterator_tagcOGroupmUcOlongcOGroupmUmUcOGroupmUaNgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEGroupmUcOallocatorlEGroupmUgRsPgRcLcLconst_iteratorgR);
}
extern "C" void G__cpp_setupdict(void) {
  G__check_setup_version(30051515,"G__cpp_setupdict()");
  G__set_cpp_environmentdict();
  G__cpp_setup_tagtabledict();

  G__cpp_setup_inheritancedict();

  G__cpp_setup_typetabledict();

  G__cpp_setup_memvardict();

  G__cpp_setup_memfuncdict();
  G__cpp_setup_globaldict();
  G__cpp_setup_funcdict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncdict();
  return;
}
class G__cpp_setup_initdict {
  public:
    G__cpp_setup_initdict() { G__add_setup_func("dict",(G__incsetup)(&G__cpp_setupdict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initdict() { G__remove_setup_func("dict"); }
};
G__cpp_setup_initdict G__cpp_setup_initializerdict;

